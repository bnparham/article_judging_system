# Generated by Django 5.1.2 on 2024-11-15 18:50

import account.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.functions.datetime
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'کاربری با این نام کاربری وجود دارد. لطفا نام کاربری دیگری انتخاب کنید'}, help_text='مورد نیاز. 150 کاراکتر یا کمتر. فقط حروف، ارقام و @/./+/-/_.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='نام کاربری')),
                ('password', models.CharField(max_length=128, verbose_name='رمز عبور')),
                ('first_name', models.CharField(max_length=150, validators=[account.validators.is_persian_only], verbose_name='نام')),
                ('last_name', models.CharField(max_length=150, validators=[account.validators.is_persian_only], verbose_name='نام خانوادگی')),
                ('is_staff', models.BooleanField(default=False, help_text='مشخص می کند که آیا کاربر می تواند به این سایت مدیریت وارد شود یا خیر.', verbose_name='دسترسی به پنل ادمین')),
                ('is_active', models.BooleanField(default=True, help_text='مشخص می کند که آیا این کاربر باید به عنوان کاربر فعال در نظر گرفته شود.به جای حذف حساب\u200cها، این مورد را لغو انتخاب کنید تا حساب کاربر غیرفعال شود.', verbose_name='وضعیت فعال بودن/نبودن کاربر')),
                ('date_joined', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), verbose_name='تاریخ عضویت')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ایمیل')),
                ('phone_number', models.CharField(max_length=100, unique=True, verbose_name='شماره موبایل')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('gender', models.CharField(blank=True, choices=[('M', 'مرد'), ('F', 'زن'), ('O', 'سایر')], max_length=1, null=True, verbose_name='جنسیت')),
                ('address', models.TextField(blank=True, default=None, max_length=500, null=True, verbose_name='آدرس محل زندگی')),
                ('verify_account', models.BooleanField(default=False, help_text='نشان میدهد کاربر شماره موبایل یا آدرس ایمیل خود را تایید کرده است یا خیر', verbose_name='تایید حساب کاربری')),
                ('password_reset_attempts', models.PositiveIntegerField(db_default=0, verbose_name='تعداد تلاش\u200cهای بازنشانی رمز عبور')),
                ('last_password_reset', models.DateTimeField(blank=True, null=True, verbose_name='آخرین بازنشانی رمز عبور')),
                ('failed_login_attempts', models.PositiveIntegerField(db_default=0, verbose_name='تعداد تلاش\u200cهای ورود ناموفق')),
                ('last_failed_login', models.DateTimeField(blank=True, null=True, verbose_name='آخرین تلاش ناموفق')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='آخرین ورود به سیستم')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='آخرین آدرس آی\u200cپی ورود')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'لیست کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
